generator client {
  provider = "prisma-client-js"
    engineType = "library"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                     Int             @id @default(autoincrement())
  email                  String          @unique
  password               String
  name                   String
  posts                  Post[]
  sentFollowRequests     FollowRequest[] @relation("SentFollowRequest")
  receivedFollowRequests FollowRequest[] @relation("ReceivedFollowRequest")
}

model Post {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  published Boolean  @default(false)
  createdAt DateTime @default(now()) @db.Date
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
}

model FollowRequest {
  id Int @id @default(autoincrement())

  // Sender side of the relationship
  sender   User @relation("SentFollowRequest", fields: [senderId], references: [id])
  senderId Int

  // Receiver side of the relationship
  receiver   User @relation("ReceivedFollowRequest", fields: [receiverId], references: [id])
  receiverId Int

  status    FollowStatus @default(PENDING)
  createdAt DateTime     @default(now())

  // Enforce uniqueness to prevent duplicate follow requests
  @@unique([senderId, receiverId, status])

  // Indexes to speed up queries based on senderId and receiverId
  @@index([senderId])
  @@index([receiverId])
}

enum FollowStatus {
  PENDING
  ACCEPTED
  REJECTED
}
